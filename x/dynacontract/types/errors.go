package types

import (
	sdkerrors "github.com/cosmos/cosmos-sdk/types/errors"
)

// DynaContract module sentinel errors
var (
	ErrContractNotFound         = sdkerrors.Register(ModuleName, 1, "contract not found")
	ErrContractCodeTooLarge     = sdkerrors.Register(ModuleName, 2, "contract code too large")
	ErrGasLimitTooHigh          = sdkerrors.Register(ModuleName, 3, "gas limit too high")
	ErrMetadataTooLarge         = sdkerrors.Register(ModuleName, 4, "metadata too large")
	ErrInsufficientDeposit      = sdkerrors.Register(ModuleName, 5, "insufficient deposit")
	ErrAgentNotFound            = sdkerrors.Register(ModuleName, 6, "agent not found")
	ErrAgentNotActive           = sdkerrors.Register(ModuleName, 7, "agent not active")
	ErrContractNotActive        = sdkerrors.Register(ModuleName, 8, "contract not active")
	ErrUnauthorized             = sdkerrors.Register(ModuleName, 9, "unauthorized")
	ErrExecutionFailed          = sdkerrors.Register(ModuleName, 10, "execution failed")
	ErrContractTypeNotSupported = sdkerrors.Register(ModuleName, 11, "contract type not supported")
	ErrLearningDataTooLarge     = sdkerrors.Register(ModuleName, 12, "learning data too large")
	ErrTemplateNotFound         = sdkerrors.Register(ModuleName, 13, "template not found")
	ErrInvalidPermissionType    = sdkerrors.Register(ModuleName, 14, "invalid permission type")
	ErrPermissionNotFound       = sdkerrors.Register(ModuleName, 15, "permission not found")
	ErrInvalidInput             = sdkerrors.Register(ModuleName, 16, "invalid input")
	ErrInvalidOutput            = sdkerrors.Register(ModuleName, 17, "invalid output")
	ErrInvalidState             = sdkerrors.Register(ModuleName, 18, "invalid state")
	ErrInvalidABI               = sdkerrors.Register(ModuleName, 19, "invalid ABI")
	ErrInvalidTags              = sdkerrors.Register(ModuleName, 20, "invalid tags")
	ErrInvalidName              = sdkerrors.Register(ModuleName, 21, "invalid name")
	ErrInvalidDescription       = sdkerrors.Register(ModuleName, 22, "invalid description")
	ErrInvalidContractType      = sdkerrors.Register(ModuleName, 23, "invalid contract type")
	ErrInvalidStatus            = sdkerrors.Register(ModuleName, 24, "invalid status")
	ErrInvalidCodeHash          = sdkerrors.Register(ModuleName, 25, "invalid code hash")
	ErrInvalidCode              = sdkerrors.Register(ModuleName, 26, "invalid code")
	ErrInvalidGasLimit          = sdkerrors.Register(ModuleName, 27, "invalid gas limit")
	ErrInvalidExecutionCount    = sdkerrors.Register(ModuleName, 28, "invalid execution count")
	ErrInvalidTimestamp         = sdkerrors.Register(ModuleName, 29, "invalid timestamp")
	ErrInvalidExpirationTime    = sdkerrors.Register(ModuleName, 30, "invalid expiration time")
	ErrInvalidGrantedBy         = sdkerrors.Register(ModuleName, 31, "invalid granted by")
	ErrInvalidSource            = sdkerrors.Register(ModuleName, 32, "invalid source")
	ErrInvalidUsageCount        = sdkerrors.Register(ModuleName, 33, "invalid usage count")
	ErrInvalidFee               = sdkerrors.Register(ModuleName, 34, "invalid fee")
	ErrInsufficientFee          = sdkerrors.Register(ModuleName, 35, "insufficient fee")
	ErrInvalidExpirationDays    = sdkerrors.Register(ModuleName, 36, "invalid expiration days")
)