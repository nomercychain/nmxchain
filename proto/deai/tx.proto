syntax = "proto3";
package nomercychain.nmxchain.deai;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "deai/deai.proto";

option go_package = "github.com/nomercychain/nmxchain/x/deai/types";

// Msg defines the Msg service.
service Msg {
  // CreateAIAgent creates a new AI agent
  rpc CreateAIAgent(MsgCreateAIAgent) returns (MsgCreateAIAgentResponse);
  
  // UpdateAIAgent updates an existing AI agent
  rpc UpdateAIAgent(MsgUpdateAIAgent) returns (MsgUpdateAIAgentResponse);
  
  // TrainAIAgent trains an AI agent with new data
  rpc TrainAIAgent(MsgTrainAIAgent) returns (MsgTrainAIAgentResponse);
  
  // ExecuteAIAgent executes an action using an AI agent
  rpc ExecuteAIAgent(MsgExecuteAIAgent) returns (MsgExecuteAIAgentResponse);
  
  // ListAIAgentForSale lists an AI agent for sale on the marketplace
  rpc ListAIAgentForSale(MsgListAIAgentForSale) returns (MsgListAIAgentForSaleResponse);
  
  // BuyAIAgent buys an AI agent from the marketplace
  rpc BuyAIAgent(MsgBuyAIAgent) returns (MsgBuyAIAgentResponse);
  
  // RentAIAgent rents an AI agent from the marketplace
  rpc RentAIAgent(MsgRentAIAgent) returns (MsgRentAIAgentResponse);
  
  // CancelMarketListing cancels a marketplace listing
  rpc CancelMarketListing(MsgCancelMarketListing) returns (MsgCancelMarketListingResponse);
}

// MsgCreateAIAgent defines a message to create a new AI agent
message MsgCreateAIAgent {
  string creator = 1;
  string name = 2;
  string description = 3;
  AIAgentType agent_type = 4;
  string model_id = 5;
  bytes permissions = 6;
  bytes metadata = 7;
}

// MsgCreateAIAgentResponse defines the response for MsgCreateAIAgent
message MsgCreateAIAgentResponse {
  string id = 1;
}

// MsgUpdateAIAgent defines a message to update an AI agent
message MsgUpdateAIAgent {
  string owner = 1;
  string agent_id = 2;
  string name = 3;
  string description = 4;
  bytes permissions = 5;
  bytes metadata = 6;
}

// MsgUpdateAIAgentResponse defines the response for MsgUpdateAIAgent
message MsgUpdateAIAgentResponse {}

// MsgTrainAIAgent defines a message to train an AI agent
message MsgTrainAIAgent {
  string owner = 1;
  string agent_id = 2;
  string data_type = 3;
  bytes data = 4;
  string source = 5;
}

// MsgTrainAIAgentResponse defines the response for MsgTrainAIAgent
message MsgTrainAIAgentResponse {
  string training_data_id = 1;
}

// MsgExecuteAIAgent defines a message to execute an AI agent
message MsgExecuteAIAgent {
  string sender = 1;
  string agent_id = 2;
  string action_type = 3;
  bytes data = 4;
  cosmos.base.v1beta1.Coin fee = 5 [(gogoproto.nullable) = false];
}

// MsgExecuteAIAgentResponse defines the response for MsgExecuteAIAgent
message MsgExecuteAIAgentResponse {
  string action_id = 1;
  bytes result = 2;
}

// MsgListAIAgentForSale defines a message to list an AI agent for sale
message MsgListAIAgentForSale {
  string seller = 1;
  string agent_id = 2;
  repeated cosmos.base.v1beta1.Coin price = 3 [(gogoproto.nullable) = false];
  repeated cosmos.base.v1beta1.Coin rental_price = 4 [(gogoproto.nullable) = false];
  uint64 rental_duration = 5;
  string listing_type = 6;
  uint64 expiration_days = 7;
}

// MsgListAIAgentForSaleResponse defines the response for MsgListAIAgentForSale
message MsgListAIAgentForSaleResponse {
  string listing_id = 1;
}

// MsgBuyAIAgent defines a message to buy an AI agent
message MsgBuyAIAgent {
  string buyer = 1;
  string listing_id = 2;
}

// MsgBuyAIAgentResponse defines the response for MsgBuyAIAgent
message MsgBuyAIAgentResponse {
  string agent_id = 1;
}

// MsgRentAIAgent defines a message to rent an AI agent
message MsgRentAIAgent {
  string renter = 1;
  string listing_id = 2;
  uint64 duration = 3;
}

// MsgRentAIAgentResponse defines the response for MsgRentAIAgent
message MsgRentAIAgentResponse {
  string agent_id = 1;
  uint64 duration = 2;
}

// MsgCancelMarketListing defines a message to cancel a marketplace listing
message MsgCancelMarketListing {
  string owner = 1;
  string listing_id = 2;
}

// MsgCancelMarketListingResponse defines the response for MsgCancelMarketListing
message MsgCancelMarketListingResponse {}